

package myPackage;
import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.border.Border;
import myPackage.loginPage;
import myPackage.RoundedBorder;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.awt.geom.Ellipse2D;
import java.awt.image.BufferedImage;
import java.sql.ResultSet;
import java.sql.Statement;


public class myFirstForm extends javax.swing.JFrame {

    String JDBC_URL = "jdbc:mysql://localhost:3306/expensemanagement";
    String DB_USER = "root";
    String DB_PASSWORD = "880011mysqlfeni";
      
       JTextField name;
       JTextField email;
       JTextField username;
       JPasswordField password;


      public myFirstForm() {
        initComponents();
        addSignUpPanel();
        setSize(600, 700); 
        setExtendedState(JFrame.MAXIMIZED_BOTH); //
         
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    int screenWidth = screenSize.width;
    int screenHeight = screenSize.height;
    

    int x = (screenWidth - getWidth()) / 2;
    

    setLocation(x, 0);

    }
    


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
        private boolean validateForm(String name, String email, String username, String password) {
    if (name.isEmpty() || email.isEmpty() || username.isEmpty() || password.isEmpty()) {
        JOptionPane.showMessageDialog(this, "All fields are required.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    if (!isValidEmail(email)) {
        JOptionPane.showMessageDialog(this, "Please enter a valid email address.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    if (!isAlpha(name)) {
        JOptionPane.showMessageDialog(this, "Name should contain only alphabetic characters.", "Validation Error", JOptionPane.ERROR_MESSAGE);
        return false;
    }
    
    return true;
}

private boolean isValidEmail(String email) {
    
    String emailRegex = "^[a-zA-Z0-9_+&*-]+(?:\\.[a-zA-Z0-9_+&*-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,7}$";
    return email.matches(emailRegex);
}

private boolean isAlpha(String name) {
    
    return name.matches("[a-zA-Z]+");
}
private void handleSignUp(String name, String email, String username, String password) {
    if (!validateForm(name, email, username, password)) {
        return;
    }
    
    try (Connection connection = DriverManager.getConnection(JDBC_URL, DB_USER, DB_PASSWORD)) {
        
        String checkUserExistsQuery = "SELECT * FROM users_info WHERE username = ? OR email = ?";
        try (PreparedStatement checkUserExistsStatement = connection.prepareStatement(checkUserExistsQuery)) {
            checkUserExistsStatement.setString(1, username);
            checkUserExistsStatement.setString(2, email);
            ResultSet existingUsers = checkUserExistsStatement.executeQuery();
            if (existingUsers.next()) {
                JOptionPane.showMessageDialog(this, "Username or email already exists. Please choose a different one.");
                return;
            }
        }
        
        
        String insertUserQuery = "INSERT INTO users_info (name, email, username, password) VALUES (?, ?, ?, ?)";
        try (PreparedStatement insertUserStatement = connection.prepareStatement(insertUserQuery, Statement.RETURN_GENERATED_KEYS)) {
            insertUserStatement.setString(1, name);
            insertUserStatement.setString(2, email);
            insertUserStatement.setString(3, username);
            insertUserStatement.setString(4, password);
            int rowsInserted = insertUserStatement.executeUpdate();
            if (rowsInserted > 0) {
                // Retrieve the generated user ID
                ResultSet generatedKeys = insertUserStatement.getGeneratedKeys();
                if (generatedKeys.next()) {
                    int userId = generatedKeys.getInt(1); 
                    UserManager.setCurrentUserId(userId); 
                }
                JOptionPane.showMessageDialog(this, "Sign up successful!");
                clearFields();
                openHomePage();
            }
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
        JOptionPane.showMessageDialog(this, "An error occurred while signing up. Please try again.");
    }
}





         private void openHomePage() {
        frmHome homePage = new frmHome();
        homePage.setVisible(true);
        this.setVisible(false);
    }

    private void clearFields() {
        name.setText("");        
        email.setText("");           
        username.setText("");      
        password.setText("");        

    }
    private ImageIcon getRoundedIcon(ImageIcon originalIcon, int size, Color color) {
        Image image = originalIcon.getImage();
        BufferedImage bufferedImage = new BufferedImage(size, size, BufferedImage.TYPE_INT_ARGB);

        Graphics2D g2 = bufferedImage.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(color);

        Stroke stroke = new BasicStroke(1);
        g2.setStroke(stroke);
        g2.drawOval(5, 5, size - 10, size - 10);

        g2.setClip(new Ellipse2D.Float(5, 5, size - 10, size - 10));
        g2.drawImage(image, 0, 0, size, size, null);
        g2.dispose();

        return new ImageIcon(bufferedImage);
    }      
       
    private void addSignUpPanel() {
          
        JPanel signUpPanel = new JPanel();
        signUpPanel.setBackground(Color.WHITE);

        JPanel form = new JPanel(null);
        form.setBackground(Color.WHITE);
         form.setBorder(new RoundedBorder(30));
        form.setPreferredSize(new Dimension(450, 575));

//         ImageIcon imageIcon = new ImageIcon(path + "src/image/logo.png");
       String path = "C:\\Users\\hp\\OneDrive\\Documents\\NetBeansProjects\\ExpenseTracker\\src\\image\\"; // Change this to your actual directory path
        ImageIcon imageIcon = new ImageIcon(path + "logo.png");


//        JLabel imageLabel = new JLabel();
       JLabel imageLabel = new JLabel(imageIcon);

        imageLabel.setIcon(getRoundedIcon(imageIcon, 90, new Color(42, 193, 255)));
        imageLabel.setBounds(140, 20, 140, 140);


        JPanel formContainer = new JPanel(null);
        formContainer.setBackground(Color.WHITE);
        formContainer.setBounds(25, 180, 400, 380);

        JLabel hello = new JLabel("Wellcome!");
        Font font = new Font("News Gothic MT", Font.BOLD, 25);
        hello.setForeground(new Color(59, 89, 152));
        hello.setBounds(140, 140, 180, 40);
        hello.setFont(font);

        name = new JTextField();
        name.setBorder(new RoundedBorder(10));
        name.setBounds(50, 30, 300, 40);

        email = new JTextField();
        email.setBorder(new RoundedBorder(10));
        email.setBounds(50, 90, 300, 40);

        username = new JTextField();
        username.setBorder(new RoundedBorder(10));
        username.setBounds(50, 150, 300, 40);

        password = new JPasswordField();
        password.setBorder(new RoundedBorder(10));
        password.setBounds(50, 210, 300, 40);

       JButton signupButton = new JButton("Sign Up");
        signupButton.setBounds(50, 270, 300, 40);
        signupButton.setBackground(new Color(59, 89, 152));
        font = new Font("News Gothic MT", Font.BOLD, 25);
        signupButton.setFont(font);
        signupButton.setBorderPainted(false);
        signupButton.setForeground(Color.WHITE);
     signupButton.addActionListener(e -> handleSignUp(name.getText(), email.getText(), username.getText(), new String(password.getPassword())));

//signupButton.addActionListener(new ActionListener() {
//    @Override
//    public void actionPerformed(ActionEvent e) {
//        handleSignUp(name.getText(), email.getText(), username.getText(), new String(password.getPassword()));
//    }
//});

        JLabel message = new JLabel("Already Have an Account! ");
        message.setBounds(50, 350, 300, 30);
        font = new Font("News Gothic MT", Font.BOLD, 15);
        message.setFont(font);
        message.setForeground(new Color(59, 89, 152));

         Common.addPlaceholder(name, "Name");
         Common.addPlaceholder(email, "Email");
         Common.addPlaceholder(username, "Username");
         Common.addPlaceholder(password, "Password");

        JButton toggleButtonSignIn = new JButton("Sign In");
        font = new Font("News Gothic MT", Font.BOLD, 15);
        toggleButtonSignIn.setFont(font);
        toggleButtonSignIn.setForeground(new Color(59, 89, 152));
        // toggleButtonSignIn.addActionListener(e -> cardLayout.next(cardPanel));
        toggleButtonSignIn.setBounds(260, 350, 120, 30);
        toggleButtonSignIn.setBorderPainted(false);
        toggleButtonSignIn.setBackground(Color.WHITE);
        toggleButtonSignIn.addActionListener(e -> openloginPage());
//        toggleButtonSignIn.addActionListener(new ActionListener() {
//            public void actionPerformed(ActionEvent e) {
//                toggleButtonSignInActionPerformed(e);
//            }
//        });


        formContainer.add(name);
        formContainer.add(email);
        formContainer.add(username);
        formContainer.add(password);
        formContainer.add(signupButton);
        formContainer.add(toggleButtonSignIn);
        formContainer.add(message);

        form.add(imageLabel);
        form.add(hello);
        form.add(formContainer);

        signUpPanel.add(form);
        
        
        
        getContentPane().setLayout(new FlowLayout());
        
        getContentPane().add(signUpPanel);
    }


    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
   
private void openloginPage() {
    loginPage y = new loginPage(); 
    y.setVisible(true); 
    this.setVisible(false); 
} 
    
public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new myFirstForm().setVisible(true);
            }
        });
    }



    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
//private void signupButtonActionPerformed(java.awt.event.ActionEvent evt) {
//        // TODO add your handling code here:
//    }
}
