
package myPackage;

import javax.swing.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.border.Border;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.ResultSet;
import myPackage.RoundedBorder;
import java.awt.geom.Ellipse2D;
import java.awt.image.BufferedImage;


public class loginPage extends javax.swing.JFrame {
     String JDBC_URL = "jdbc:mysql://localhost:3306/expensemanagement";
    String DB_USER = "root";
    String DB_PASSWORD = "880011mysqlfeni";

  
    public loginPage() {
        initComponents();
        addSignInPanel(); 

         setExtendedState(JFrame.MAXIMIZED_BOTH); //
         
    Dimension screenSize = Toolkit.getDefaultToolkit().getScreenSize();
    int screenWidth = screenSize.width;
    int screenHeight = screenSize.height;
    
    
    int x = (screenWidth - getWidth()) / 2;
    

    setLocation(x, 0);

    }
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
     private void handleSignIn(String email, String password) {
        try (Connection connection = DriverManager.getConnection(JDBC_URL, DB_USER, DB_PASSWORD)) {
            String sql = "SELECT * FROM users_info WHERE email = ?";
            try (PreparedStatement statement = connection.prepareStatement(sql)) {
                statement.setString(1, email);
                ResultSet resultSet = statement.executeQuery();
                if (resultSet.next()) {
                    String storedPassword = resultSet.getString("password");
                    if (password.equals(storedPassword)) {
                        
                        
                        int userId = resultSet.getInt("user_id"); 
                    UserManager.setCurrentUserId(userId); 
                        
                        JOptionPane.showMessageDialog(this, "Login successful!");
                        openHomePage();
                        return;
                    }
                }
            }
            
            JOptionPane.showMessageDialog(this, "Invalid email or password. Please try again.");
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(this, "An error occurred while signing in. Please try again.");
        }
    }
     private void openHomePage() {
        frmHome homePage = new frmHome();
        homePage.setVisible(true);
        this.setVisible(false);
    }
      private ImageIcon getRoundedIcon(ImageIcon originalIcon, int size, Color color) {
        Image image = originalIcon.getImage();
        BufferedImage bufferedImage = new BufferedImage(size, size, BufferedImage.TYPE_INT_ARGB);

        Graphics2D g2 = bufferedImage.createGraphics();
        g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2.setColor(color);

        Stroke stroke = new BasicStroke(1);
        g2.setStroke(stroke);
        g2.drawOval(5, 5, size - 10, size - 10);

        g2.setClip(new Ellipse2D.Float(5, 5, size - 10, size - 10));
        g2.drawImage(image, 0, 0, size, size, null);
        g2.dispose();

        return new ImageIcon(bufferedImage);
    }      

      private void addSignInPanel() {

        JPanel signInPanel = new JPanel();
        signInPanel.setBackground(Color.WHITE);

        JPanel form = new JPanel(null);
        form.setBackground(Color.WHITE);
        form.setBorder(new RoundedBorder(30));
        form.setPreferredSize(new Dimension(450, 575));

        //ImageIcon imageIcon = new ImageIcon(path + "src/image/logo.png");
       String path = "C:\\Users\\hp\\OneDrive\\Documents\\NetBeansProjects\\ExpenseTracker\\src\\image\\"; // Change this to your actual directory path
        ImageIcon imageIcon = new ImageIcon(path + "logo.png");


//        JLabel imageLabel = new JLabel();
       JLabel imageLabel = new JLabel(imageIcon);

        imageLabel.setIcon(getRoundedIcon(imageIcon, 90, new Color(42, 193, 255)));
        imageLabel.setBounds(160, 20, 130, 130);

        JPanel formContainer = new JPanel(null);
        formContainer.setBackground(Color.WHITE);
        formContainer.setBounds(25, 180, 400, 380);

        JLabel hello = new JLabel("Hello Again!");
        Font font = new Font("News Gothic MT", Font.BOLD, 25);
        hello.setForeground(new Color(59, 89, 152));
        hello.setBounds(140, 140, 180, 40);
        
        hello.setFont(font);

        JTextField email = new JTextField();
        email.setBorder(new RoundedBorder(10));
        email.setBounds(50, 30, 300, 40);

        JPasswordField password = new JPasswordField();
        password.setBorder(new RoundedBorder(10));
        password.setBounds(50, 90, 300, 40);

        JButton login = new JButton();
        login.setBounds(50, 150, 300, 40);
        login.setBackground(new Color(59, 89, 152));
        login.setText("Sign In");
        login.setBorderPainted(false);
        font = new Font("News Gothic MT", Font.BOLD, 25);
        login.setFont(font);
        login.setBorder(new RoundedBorder(10));
        login.setForeground(Color.WHITE);
//        login.addActionListener(new ActionListener() {
//    @Override
//    public void actionPerformed(ActionEvent e) {
//        handleSignIn(email.getText(), String.valueOf(password.getPassword()));
//    }
//});
login.addActionListener(e -> handleSignIn(email.getText(), String.valueOf(password.getPassword())));


        // Placeholder text for email and password fields
        email.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (email.getText().equals("Email")) {
                    email.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (email.getText().isEmpty()) {
                    email.setText("Email");
                }
            }
        });

        password.addFocusListener(new FocusAdapter() {
            @Override
            public void focusGained(FocusEvent e) {
                if (String.valueOf(password.getPassword()).equals("Password")) {
                    password.setText("");
                }
            }

            @Override
            public void focusLost(FocusEvent e) {
                if (String.valueOf(password.getPassword()).isEmpty()) {
                    password.setText("Password");
                }
            }
        });

       // login.addActionListener(e -> handleSignIn(email.getText(), String.valueOf(password.getPassword())));

        JLabel message = new JLabel("Don't have an account yet?");
        message.setBounds(50, 250, 300, 30);
        font = new Font("News Gothic MT", Font.BOLD, 15);
        message.setFont(font);
        message.setForeground(new Color(59, 89, 152));

        JButton toggleButtonSignUp = new JButton("Sign Up");
        font = new Font("News Gothic MT", Font.BOLD, 15);
        toggleButtonSignUp.setFont(font);
        toggleButtonSignUp.setForeground(new Color(59, 89, 152));
        toggleButtonSignUp.addActionListener(e -> openSignUpPage());
        toggleButtonSignUp.setBounds(265, 250, 120, 30);
        toggleButtonSignUp.setBorderPainted(false);
        toggleButtonSignUp.setBackground(Color.WHITE);

        formContainer.add(email);
        formContainer.add(password);
        formContainer.add(login);
        formContainer.add(message);
        formContainer.add(toggleButtonSignUp);
        form.add(imageLabel);
        form.add(hello);
        form.add(formContainer);

        signInPanel.add(form);
         Common.addPlaceholder(password, "password");
         Common.addPlaceholder(email, "Email");
         

        
        GroupLayout gl = (GroupLayout) getContentPane().getLayout();
        gl.setHorizontalGroup(
            gl.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(gl.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(signInPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
        gl.setVerticalGroup(
            gl.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(gl.createSequentialGroup()
                .addGap(50, 50, 50)
                .addComponent(signInPanel, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(50, 50, 50))
        );
    }
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    
private void openSignUpPage() {
    myFirstForm signUpPage = new myFirstForm(); 
    signUpPage.setVisible(true); 
    this.setVisible(false); 
}


//    private ImageIcon getRoundedIcon(ImageIcon originalIcon, int size, Color color) {
//        // Implement method to create rounded icon
//        return null;
//    }
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loginPage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginPage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
